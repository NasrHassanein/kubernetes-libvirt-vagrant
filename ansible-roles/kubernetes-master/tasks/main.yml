---
- name: install packages that allow apt to be used over HTTPS
  apt:
    name: "{{ packages }}"
    update_cache: yes
    state: present
  vars:
    packages:
    - apt-transport-https
    - ca-certificates
    - curl
    - gnupg-agent
    - software-properties-common

- name: add an apt signing key for Docker
  apt_key:
    url: "https://download.docker.com/linux/ubuntu/gpg"
    state: present

- name: add docker apt repository for stable version
  apt_repository:
    repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
    state: present

- name: install docker and its dependecies
  apt:
    name: "{{ packages }}"
    state: present
    update_cache: yes
  vars:
    packages:
    - docker-ce
    - docker-ce-cli
    - containerd.io
  notify: starting docker

- name: add vagrant user to docker group
  user:
    name: vagrant
    group: docker

- name: remove swapfile from /etc/fstab
  mount:
    name: "{{ item }}"
    fstype: swap
    state: absent
  with_items:
    - swap
    - none

- name: disable swap
  command: swapoff -a
  when: ansible_swaptotal_mb > 0

- name: add an apt signing key for Kubernetes
  apt_key:
    url: "https://packages.cloud.google.com/apt/doc/apt-key.gpg"
    state: present

- name: adding apt repository for Kubernetes
  apt_repository:
    repo: "deb https://apt.kubernetes.io/ kubernetes-xenial main"
    state: present
    filename: kubernetes.list

- name: install Kubernetes binaries
  apt:
    name: "{{ packages }}"
    state: present
    update_cache: yes
  vars:
    packages:
      - kubelet
      - kubeadm
      - kubectl
  notify: starting kubernetes

- name: configure node ip
  lineinfile:
    path: /etc/default/kubelet
    create: yes
    line: KUBELET_EXTRA_ARGS=--node-ip={{ node_ip }}

- name: create kubeconfig directory for vagrant user
  file:
    path: /home/vagrant/.kube
    state: directory
    mode: '0755'
    owner: vagrant
    group: vagrant
